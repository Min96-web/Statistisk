---
title: "Statistik och dataanalys III, VT2024"
subtitle: "Inl√§mningsuppgift 1"
author: 
- Leo Wiberg
- Minhui Zhong
- Yimei Jiang
date: last-modified
format: 
  html:
    self-contained: true
  pdf: default  
  docx: default
toc: true
language: 
  title-block-author-single: " "
toc-title-document: "Inneh√•ll"
crossref-fig-title: "Figur"
theme: Superhero
title-block-banner-color: Primary
title-block-published: "Publicerad"
callout-warning-caption: "Varning"
callout-note-caption: "Observera"
callout-tip-caption: "Tips"
editor: visual
---

```{r}
# Den h√§r inl√§mningsuppgiften f√∂ruts√§tter att f√∂ljande paket finns installerade:

install.packages("latex2exp")

library(ggplot2)

library(plotly)

library(latex2exp)

library(SUdatasets)

library(mvtnorm)
```

# **Del 1 - En Kort Uppgift**

## Uppgift 1.1

```{r}
#Jennifer i kod
pbinom(2, 5, 1/13) - pbinom(1, 5, 1/13 ) 

#Michel i kod
phyper(2, 4, 48, 5) - phyper(1, 4, 48, 5)

```

Jennifers sannolikhet f√∂ljer en binomialf√∂rdelning eftersom att hon l√§gger tillbaka korten. Sannolikheten f√∂rblir densamma vid varje kortdragning. Binomialf√∂rdelningen har parametrarna *Y \~ Bin (5, 1/13)* d√• hon drar *n=5* kort och sannolikheten att dra ett ess f√∂rblir *p = 1/13* f√∂r alla dragningar.

Utr√§kning f√∂r sannolikhet:

![](images/Screenshot%202024-02-18%20at%2015.34.02.png)

Michel f√∂ljer ist√§llet en hypergeometrisk f√∂rdelning d√• han inte l√§gger tillbaka korten. Den hypergeometriska f√∂rdelningen har parametrarna *Y \~ ùêªùë¶ùëù(52,5,4)* d√• det finns *N=52* kort i populationen, *n=5* valda kort och *r=4* kort i kortleken med ‚Äúegenskapen‚Äù ess.

Utr√§kning f√∂r sannolikhet:

![](images/Screenshot%202024-02-18%20at%2015.35.36.png)

Sammanfattningsvis s√• kan vi s√§ga att b√•da parter har r√§knat ut r√§tt sannolikheter f√∂r sina egna metoder att dra kort.

## Uppgift 1.2

```{r}
antal_ess=0:15

Jennifers = dbinom(antal_ess, 5, 1/13)
Michel = dhyper(antal_ess, 4, 48, 5)
Jennifers15 = dbinom(antal_ess, 15, 1/13)
Michel15 = dhyper(antal_ess, 4, 48, 15)

df = data.frame(x = antal_ess, Jennifer = Jennifers, michel = Michel, Jen15=Jennifers15, Mic15=Michel15)

library(ggplot2)
ggplot(df, aes(x = x)) + 
  geom_line(aes(y = Jennifer, color = "Jennifer 5 dragningar"), linewidth = 1) + 
  geom_line(aes(y = Michel, color = "Michel 5 dragningar"), linewidth = 1) + 
  geom_line(aes(y = Jen15, color = "Jennifer 15 dragningar"), linewidth = 1) +
  geom_line(aes(y = Mic15, color = "Michel 15 dragningar"), linewidth = 1) + 
  theme_minimal() +
  xlab("Antal ess dragna") +
  ylab("Sannolikhet") + 
  scale_color_manual(name = "Linjer", 
                     values = c("Jennifer 5 dragningar" = "green4", 
                                "Michel 5 dragningar" = "yellow2", 
                                "Jennifer 15 dragningar" = "orange", 
                                "Michel 15 dragningar" = "red"))

```

Ovan visas en graf √∂ver antal ess dragna p√• x-axeln och sannolikheten att dra det antalet p√• y-axeln.¬†

De tv√• linjerna som ligger p√• y-v√§rdet 0.65 vid x-v√§rdet 0 och sjunker sedan hastigt √§r f√∂r fem dragna kort. F√∂rdelningen av sannolikheter f√∂r Jennifer och Michel √§r i princip lika i detta fall och √§r ungef√§r 0 f√∂r mer √§n 2 dragna ess. N√§r de ist√§llet drar 15 kort finns en liten skillnad i sannolikhet. B√•da har st√∂rst sannolikhet att dra 1 ess men Jennifer har en bredare sannolikhetsf√∂rdelning √§n Michel. Michel har en sannolikhet p√• exakt 0 att dra mer √§n 4 ess, vilket kan f√∂rklaras av att det endast finns fyra m√∂jliga ess han kan dra. Jennifers sannolikhet att dra mer √§n 4 ess √§r v√§ldigt liten, om √§n befintlig.

## Uppgift 1.3

```{r}
antal_ess_30=0:30

Jennifers = dbinom(antal_ess_30, 5, 4/13)
Michels = dhyper(antal_ess_30, 16, 36, 5)
Jennifers15 = dbinom(antal_ess_30, 15, 4/13)
Michels15 = dhyper(antal_ess_30, 16, 36, 15)
Jennifers30 = dbinom(antal_ess_30, 30, 4/13)
Michels30 = dhyper(antal_ess_30, 16, 36, 30)

df2 = data.frame(x = antal_ess_30, Jennifer = Jennifers, Michel = Michels, Jen15=Jennifers15, Mic15=Michels15, Jen30 = Jennifers30, Mic30 = Michels30)


ggplot(df2, aes(x=x)) + 
  geom_line(aes(y = Jennifer, color ="Jennifer 5 dragningar"), linewidth = 1) +
  geom_line(aes(y = Michel, color = "Michel 5 dragningar"), linewidth = 1) + 
  geom_line(aes(y = Jen15, color = "Jennifer 15 dragningar"), linewidth = 1) +
  geom_line(aes(y = Mic15, color = "Michel 15 dragningar"), linewidth = 1) + 
  geom_line(aes(y = Jen30, color = "Jennifer 30 dragningar"), linewidth = 1) +
  geom_line(aes(y = Mic30, color = "Michel 30 dragningar"), linewidth = 1) + 
  theme_minimal() +
  xlab("Antal dragna ess, kungar, damer och kn√§cktar") +
  ylab("Sannolikhet") +
  scale_color_manual(name = "Linjer", 
                     values = c("Jennifer 5 dragningar" = "green4", 
                                "Michel 5 dragningar" = "yellow2", 
                                "Jennifer 15 dragningar" = "orange",
                                "Michel 15 dragningar" = "red", 
                                "Jennifer 30 dragningar" = "darkred",
                                "Michel 30 dragningar" = "brown"))

```

Vi ser tre par av linjer f√∂r Jennifer och Michels sannolikheter. Det f√∂rsta paret som har st√∂rst sannolikhet vid ett lyckat kort √§r f√∂rs√∂ken d√§r de drar fem kort var. Deras sannolikhetsf√∂rdelningar ser v√§ldigt lika ut √§ven om Jennifer har en n√•got bredare f√∂rdelning.¬†

Det andra paret av linjer, deras sannolikhetsf√∂rdelningar vid 15 dragna kort, har olika toppar. Jennifer har st√∂rst sannolikhet att dra fyra lyckade kort medan Michel har n√•got st√∂rre sannolikhet att dra fem kort. √Öterigen √§r Jennifers f√∂rdelning bredare.

Det tredje paret av linjer representerar 30 dragningar och d√§r har b√•da personer st√∂rst sannolikhet att dra 9 lyckade kort. Jennifers √§r √•terigen bredare.

Jennifers bredare f√∂rdelning beror p√• faktumet att hon har en binomialf√∂rdelning. De kort hon dragit tidigare p√•verkar inte hennes n√§sta dragning. Dragningarna √§r oberoende och har d√§rmed en varians *V(Jen) = npq = 28n/169.* Michels dragning √§r dock starkt beroende p√• hans tidigare dragningar vilket leder till en smalare varians:

![](images/Screenshot%202024-02-18%20at%2015.46.32.png)

## Uppgift 1.4

```{r}
sim_nummer=integer(length = 16)
Jen_sim_15 = rbinom(1000, 15, 4/13)

for (j in 0:15){sim_nummer[j+1] = sum(Jen_sim_15==j)/1000}

names(sim_nummer) = 0:15
barplot(sim_nummer, col = "orange", ylim = c(0,0.3), ylab = "P(Y=y)", xlab = "y = Antal dragna kn√§cktar, damer, kungar och ess", main = "1000 simulationer av Jennifers dragningar Y ~ Binom(15,4/13)")


sim_nummer_Mic=integer(length = 16)
Mic_sim_15 = rhyper(nn = 1000, m = 16, n = 36, k = 15 )

for (j in 0:16){sim_nummer_Mic[j+1] = sum(Mic_sim_15==j)/1000}

names(sim_nummer_Mic) = 0:15
barplot(sim_nummer_Mic, col = "blue", ylim = c(0,0.3), ylab = "P(Y=y)", xlab = "y = Antal dragna kn√§cktar, damer, kungar och ess", main = "1000 simulationer av Michels dragningar Y ~ Binom(52, 15, 16")

```

Simuleringarna ser ut att st√§mma √∂verens med de teoretiska f√∂rdelningarna.

## Uppgift 1.5

```{r}
#Medelv√§rde enligt definition f√∂r binomialf√∂rdelning: n g√•nger p
15*4/13

#Standardavvikelse enligt definition f√∂r binomialf√∂rdelning: roten ur (n g√•nger p g√•nger 1-p)
sqrt(15*(4/13)*(9/13))

approximativ = dnorm(antal_ess, 4.615385, 1.787531)

df3 = data.frame(x = antal_ess, Jens_sim = sim_nummer, Jens_aprox = approximativ, Jen15 = Jennifers15[0:16])

ggplot(df3, aes(x=x)) + 
  geom_line(aes(y = Jens_sim, color ="Simulering"), size = 2) +
  geom_line(aes(y = Jens_aprox, color ="Normalf√∂rdelning"), size = 2) + 
  geom_line(aes(y = Jen15, color ="Teoretisk Binomialf√∂rdelning"), size = 2) +
  theme_minimal() +
  xlab("Antal dragna ess, kungar, damer och kn√§cktar") +
  ylab("Sannolikhet") +
  scale_color_manual(name = "F√∂rdelningar", 
                    values = c("Simulering" = "yellow2", 
                               "Normalf√∂rdelning" = "orange", 
                               "Teoretisk Binomialf√∂rdelning" = "red"))

#Teoretisk sannolikhet f√∂r 3 lyckade f√∂rs√∂k
dbinom(3, 15, 4/13)
#Teoretisk sannolikhet f√∂r 4 lyckade f√∂rs√∂k
dbinom(4, 15, 4/13)

#Simulerad sannolikhet f√∂r 3 lyckade f√∂rs√∂k
mean(Jen_sim_15 == 3)
#Simulerad sannolikhet f√∂r 4 lyckade f√∂rs√∂k
mean(Jen_sim_15 == 4)

#Approximativ sannolikhet f√∂r 3 lyckade f√∂rs√∂k
dnorm(3, 4.615385, 1.787531)
#Approximativ sannolikhet f√∂r 4 lyckade f√∂rs√∂k
dnorm(4, 4.615385, 1.787531)

```

Att dra 15 kort ger f√∂ljande v√§ntev√§rde och standardavvikelse enligt definitionen f√∂r binomialf√∂rdelningar:

![](images/Screenshot%202024-02-18%20at%2015.48.49.png)

Approximativ sannolikhet ber√§knas p√• f√∂ljande s√§tt:

$f(3)‚âà {1\over 1.787531 {\sqrt 2 \pi}}e^{-{{(3-4.615385)^2}\over2 \times 1.787531^2}}‚âà0.14836$$f(4)‚âà {1\over 1.787531 {\sqrt 2 \pi}}e^{-{{(4-4.615385)^2}\over2 \times 1.787531^2}}‚âà0.21034$\

Den simulerade sannolikheten varierar varje g√•ng man l√§ser in detta dokument men st√§mmer bra √∂verens med den teoretiska d√• vi pr√∂vat den. Den approximativa avviker allts√• mest. Ett annat problem med den approximativa √§r att normalf√∂rdelningen g√§ller f√∂r kontinuerliga variabler, men denna √§r diskret. Detta inneb√§r n√•gra problem. De totala sannolikheterna f√∂r 0-15 lyckade blir inte 1 (det blir ca 0.998) och det finns sannolikheter f√∂r br√•k och negativa tal.

# **Del 2 - Poissonregression och Maximum likelihood**

## Uppgift 2.1

```{r}
install.packages("remotes")
library(remotes)
install_github("StatisticsSU/SUdatasets", force = TRUE)
library(SUdatasets)

# dataset
df_doctor_visits = doctorvisits

head(df_doctor_visits)

summary(df_doctor_visits)

# Utforska f√∂rdelningen av variablerna med histogram
hist(df_doctor_visits$age, main = "Histogram of Age")

```

## Uppgift 2.2

Vi har valt ut variablerna age som ska anv√§ndas i en Poisson Regression d√§r numvisits √§r responsvariabel. Anledningar till detta eftersom det √§r en viktig faktor som har en viktig koppling till beteende m√∂nster och konsumtionsvanor. Det √§r rimligt att anta hur √•lder kan p√•verka antalet bes√∂k p√• platser. Det √§r ocks√• l√§tt att samla in och anv√§nda i analyser.

## Uppgift 2.3

```{r}
#loglikelihood f√∂r Poisson Regression
loglikelihoodfunc <- function(lambda) sum(dpois(x = df_doctor_visits$numvisit, lambda = lambda, log = TRUE))
```

## Uppgift 2.4

```{r}
install.packages("plot_ly")
library("plotly")

#loglikelihood f√∂r Poisson Regression
likelilambda <- function(B0, B1) {
  return(sum(dpois(df_doctor_visits$numvisit, lambda = exp(B0 + B1 * df_doctor_visits$age), log = TRUE)))
}

#Grid p√• x och y_axlarna
B0Grid<-seq(0.2, 0.7,length =100)
B1Grid<-seq(-0.15, 0.1,length =100)

likeli_values <- outer(X = B0Grid, Y = B1Grid, FUN = Vectorize(likelilambda))

#plotta figuren
plot_ly(x =B1Grid, y =B0Grid, z =likeli_values, type ="surface")

```

## Uppgift 2.5

```{r}
loglik_poisreg <- function(betavect, y, x) { 
  lambda = exp(betavect[1] + betavect[2] * df_doctor_visits$age) 
  loglik = sum(dpois(y, lambda, log = TRUE)) 
  return(loglik) 
  }

y = df_doctor_visits$numvisit 
x = df_doctor_visits$age 
initVal = c(1,1) 
optRes <- optim(initVal, loglik_poisreg, gr=NULL, y,x, control=list(fnscale=-1), method= "BFGS", hessian=TRUE) 

mle = optRes$par

r_ML = mle[1]
mu_ML= mle[2]
r_ML
mu_ML

```

## Uppgift 2.6

```{r}
#approximativa kovariansmatris
mle_cov = solve(-optres$hessian)
mle_cov

mle_cov[1,1]
se_r = sqrt(mle_cov[1,1])
se_mu = sqrt(mle_cov[2,2])

#95%igt KI f√∂r r_ML
r_ML - 1.96 * se_r #nedre gr√§ns
r_ML + 1.96 * se_r #√∂vre gr√§ns

#95%igt KI f√∂r mu_ML
mu_ML - 1.96 * se_mu #nedre gr√§ns
mu_ML + 1.96 * se_mu #√∂vre gr√§ns

```

## Uppgift 2.7

e\^(0.3893+57\*0.0149) ‚âà 3.45 st l√§karbes√∂k. Det √§r en bra estimation d√• hon hade 3 stycken l√§karbes√∂k. residualen √§r d√§rmed 3.45 - 3 = 0.45

Uppgift 2.8

```{r}
install.packages("mvtnorm")
library(mvtnorm)

mean_vec <- c(r_ML, mu_ML) # Medelv√§rden f√∂r beta0 och beta1

# Simulera 10 000 observationer fr√•n den bivariata normalf√∂rdelningen
simulated_data <- rmvnorm(10000, mean = mean_vec, sigma = mle_cov)
plot (x = simulated_data[ , 1], y = simulated_data[,2], col = 2)

intervall <- simulated_data[simulated_data[,1] <= 0.5 & simulated_data[,1] >= 0.4 & simulated_data[,2] <= 0.009 & simulated_data[,2] >= 0.006, ]

#R√§kna ut sannolikheten att n√•got finns i intervallen
length(probability)/length(simulated_data)


```
